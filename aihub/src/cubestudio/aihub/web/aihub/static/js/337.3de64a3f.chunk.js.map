{"version":3,"file":"static/js/337.3de64a3f.chunk.js","mappings":"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","sources":["components/InputSearch/InputSearch.tsx","components/FileUploadPlus/FileUploadPlus.tsx","components/ImageUploadPlus/ImageUploadPlus.tsx","components/CheckoutGroupPlus/CheckoutGroupPlus.tsx","components/DynamicForm/DynamicForm.tsx","components/Loading/Loading.tsx","utils/weixin.ts","pages/Index/Index.tsx","api/mobiApi.ts"],"sourcesContent":["import { SearchOutlined } from '@ant-design/icons';\nimport { Input } from 'antd';\nimport React, { useState, ChangeEvent, useEffect } from 'react';\nimport './InputSearch.less';\n\ninterface IProps {\n    labelName?: string,\n    width?: string,\n    placeholder?: string,\n    maxLength?: number,\n    maxHeight?: number,\n    // 是否开启前端搜索匹配\n    isOpenSearchMatch?: boolean,\n    loading?: boolean | JSX.Element,\n    // 配置提示列表\n    options?: string[],\n    // 当配置value时，即为可控组件\n    value?: string,\n    disabled?: boolean\n    // 按回车时回调\n    onSearch?: (value: string) => void,\n    // 输入字符、按下回车时回调\n    onChange?: (value: string) => void,\n    // 点击option中的item\n    onClick?: (value: string) => void,\n    // 滚动条到底时触发\n    onScrollButtom?: () => void\n}\n\nexport default function InputSearch(props: IProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n    let inputRef: any;\n\n    const [dataCache, setDataCache] = useState<string[]>(props.options || []);\n    const [value, setValue] = useState(props.value || '');\n\n    useEffect(() => {\n        const dataFilter = props.isOpenSearchMatch ? (props.options || []).filter(item => {\n            return item.indexOf(value) !== -1;\n        }) : (props.options || []);\n        setDataCache(dataFilter);\n    }, [props.options]);\n\n    useEffect(() => {\n        setValue(props.value || '');\n        // props.onChange && props.onChange(props.value);\n    }, [props.value]);\n\n    const handleChange = (value: string): void => {\n        setValue(value);\n        props.onChange && props.onChange(value);\n    };\n\n    const handleClick = (value: string): void => {\n        handleChange(value);\n        props.onClick && props.onClick(value);\n    };\n\n    const handleEnterKey = (e: React.KeyboardEvent<HTMLInputElement>): void => {\n        // 回车\n        if (e.nativeEvent.keyCode === 13) {\n            inputRef.blur && inputRef.blur();\n            props.onSearch && props.onSearch(e.currentTarget.value);\n        }\n    };\n\n    const highlightKeyWord = (item: string): JSX.Element => {\n        const keyWord = value;\n        const index = item.indexOf(value);\n        if (index === -1) {\n            return <span>{item}</span>;\n        }\n        const preStr = item.substring(0, index);\n        const nextStr = item.substring(index + value.length);\n        return <span>{preStr}<span className=\"highlight\">{keyWord}</span>{nextStr}</span>;\n    };\n\n    const debounce = (fun: any, time = 500): any => {\n        let timer: ReturnType<typeof setTimeout>;\n        return function (...args: any): void {\n            clearTimeout(timer);\n            timer = setTimeout(() => {\n                fun && fun.apply(null, [...args]);\n            }, time);\n        };\n    };\n\n    const debounceScroll = debounce(props.onScrollButtom);\n\n    const handleScroll = (e: React.UIEvent<HTMLElement>): void => {\n        e.stopPropagation();\n        // console.log({\n        //     event: e,\n        //     target: e.target, // Note 1* scrollTop is undefined on e.target\n        //     currentTarget: e.currentTarget,\n        //     scrollTop: e.currentTarget.scrollTop,\n        //     scrollHeight: e.currentTarget.scrollHeight,\n        //     clientHeight: e.currentTarget.clientHeight\n        // });\n        const { currentTarget } = e;\n        const { scrollTop, clientHeight, scrollHeight } = currentTarget;\n        const difference = scrollHeight - clientHeight - scrollTop;\n        if (difference < 20) {\n            props.onScrollButtom && debounceScroll();\n        }\n    };\n\n    return (\n        <div className=\"select-down-modern\">\n            {\n                props.labelName ? <label htmlFor={id} className=\"pb4 mb0 fs12 d-b\">{props.labelName}</label> : null\n            }\n            <div className=\"p-r d-f ac\" style={{ width: props.width || 100 + '%' }}>\n                <Input\n                    style={{ width: '100%' }}\n                    disabled={props.disabled}\n                    id={id}\n                    placeholder={props.placeholder || ''}\n                    maxLength={props.maxLength || 200}\n                    onChange={(e: ChangeEvent<HTMLInputElement>): void => handleChange(e.target.value)}\n                    onKeyPress={handleEnterKey}\n                    value={value}\n                    ref={element => inputRef = element}\n                />\n                <SearchOutlined className=\"p-a r0 mr8\" />\n            </div>\n\n            {\n                // 输入提示\n                dataCache.length ? <ul className=\"select-option shadow\" onScroll={handleScroll} style={{ 'maxHeight': `${props.maxHeight}px` }}>\n                    {\n                        props.loading ? <div className=\"p-s z9 ta-r\" style={{ right: `${0}px`, top: `${0}px` }}>\n                            <div className=\"d-il p-a\" style={{ right: `${8}px`, top: `${0}px` }}></div>\n                        </div> : null\n                    }\n                    {\n                        dataCache.map((item, index) => {\n                            return <li className=\"ellip1\" onMouseDown={(): void => handleClick(item)} key={index}>{highlightKeyWord(item)}</li>;\n                        })\n                    }\n                </ul> : null\n            }\n        </div>\n    );\n}","import { AudioOutlined, CloseOutlined, DeleteColumnOutlined, DeleteFilled, DeleteOutlined, InboxOutlined, LoadingOutlined, PlusOutlined, VideoCameraAddOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport Upload, { RcFile, UploadChangeParam } from 'antd/lib/upload';\nimport { UploadFile } from 'antd/lib/upload/interface';\nimport React, { useState } from 'react'\nimport './FileUploadPlus.less';\n\ninterface Iprops {\n    type?: TFileType\n    onChange?: (value: any) => void\n    value?: string[]\n    maxCount?: number\n    maxSize?: number\n    format?: string[]\n}\n\ntype TFileType = 'file' | 'video' | 'audio'\n\nexport default function FileUploadPlus(props: Iprops) {\n    const [visableChangePhone, setVisableChangePhone] = useState(false);\n    const [fileLoading, setFileLoading] = useState(false);\n    const [imgUrl, setImgUrl] = useState('');\n    const [imageList, setImageList] = useState<string[]>([])\n    const [loading, setLoading] = useState(true);\n    const [fileList, setFileList] = useState<UploadFile[]>([])\n\n    function getBase64(img: any, callback: any) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file: RcFile) {\n        console.log('file', file);\n\n        const maxCount = props.maxCount || 1\n        if (fileList.length >= maxCount) {\n            message.error('超出文件数量限制');\n            return false\n        }\n        // 'image/jpeg' || 'video/mp4' || 'audio/mpeg'\n        const isFormatOk = props.format?.includes(file.type);\n        if (!isFormatOk) {\n            message.error('文件格式错误');\n        }\n        const isLt2M = file.size < (props.maxSize || 2 * 1024 * 1024);\n        if (!isLt2M) {\n            message.error('文件大小限制');\n        }\n        return isFormatOk && isLt2M;\n    }\n\n    const handleChange = (info: UploadChangeParam) => {\n        console.log(info);\n\n        if (info.file.status === 'uploading') {\n            setFileLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setFileLoading(false);\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n        }\n        if (info.file.status === \"removed\") {\n            setFileList(info.fileList)\n            props.onChange && props.onChange(info.fileList)\n            return;\n        }\n    };\n\n    const file2Bin = (file?: RcFile) => {\n        console.log('file2Bin', file);\n        return new Promise((resolve, reject) => {\n            if (file) {\n                let name = file.name.replace(/.+\\./, '');\n                let filename = file.name;\n                let reader = new FileReader();\n                reader.readAsDataURL(file);\n                reader.onload = () => {\n                    resolve(reader.result)\n                }\n            } else {\n                reject(undefined)\n            }\n        })\n    }\n\n    //建立一个可存取到该file的url\n    function getObjectURL(file: any) {\n        var url = null;\n        if ((window as any).createObjectURL != undefined) { // basic\n            url = (window as any).createObjectURL(file);\n        } else if (window.URL != undefined) { // mozilla(firefox)\n            url = window.URL.createObjectURL(file);\n        } else if (window.webkitURL != undefined) { // webkit or chrome\n            url = window.webkitURL.createObjectURL(file);\n        }\n        return url;\n    }\n\n    const createMediaPreview = (file: UploadFile<any>, fileIndex: number, type: TFileType) => {\n        const url = getObjectURL(file)\n        const key = Math.random().toString(36).substring(2);\n        if (type === 'video') {\n            return <div className=\"p-r\" key={key}>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                    }}\n                    className=\"d-il p-a plr8 ptb2 bg-fail\"\n                    style={{ top: 0, right: 0, borderBottomLeftRadius: 6, zIndex: 9 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n                <video className=\"w100 mb8\" src={url} controls></video>\n            </div>\n        } else if (type === 'audio') {\n            return <div className=\"d-f ac mb8\" key={key}>\n                <audio className=\"w100 flex1\" src={url} controls></audio>\n                <span\n                    onClick={() => {\n                        const currentFileList = [...fileList]\n                        currentFileList.splice(fileIndex, 1)\n                        setFileList(currentFileList)\n                    }}\n                    className=\"d-il plr8 ptb2 bg-fail\"\n                    style={{ borderRadius: 6 }}>\n                    <DeleteOutlined style={{ color: '#fff' }} />\n                </span>\n            </div>\n        }\n        return file\n    }\n\n    return (\n        <>\n            <div>\n                {\n                    fileList.map((file, fileIndex) => {\n                        return createMediaPreview(file, fileIndex, props.type || 'file')\n                    })\n                }\n            </div>\n            <Upload.Dragger\n                // name=\"file\"\n                fileList={fileList}\n                showUploadList={false}\n                customRequest={(options) => {\n                    console.log(options.file);\n                    const tarList = [...fileList, options.file as RcFile]\n                    setFileList(tarList)\n\n                    Promise.all(tarList.map((item: any) => file2Bin(item))).then(res => {\n                        console.log(res)\n                        props.onChange && props.onChange(res)\n                    })\n\n                    // getBase64(options.file, (imageUrl: string) => {\n                    //     // setImgUrl(imageUrl);\n                    //     const tarList = [...imageList, imageUrl]\n                    //     setImageList(tarList)\n                    //     setFileLoading(false);\n                    //     props.onChange && props.onChange(tarList)\n                    // });\n                }}\n                beforeUpload={beforeUpload}\n                onChange={handleChange}\n            >\n                <p className=\"ant-upload-drag-icon\">\n                    {\n                        (props.type === 'file' || !props.type) ? <InboxOutlined /> : null\n                    }\n                    {\n                        props.type === 'video' ? <VideoCameraAddOutlined /> : null\n                    }\n                    {\n                        props.type === 'audio' ? <AudioOutlined /> : null\n                    }\n                </p>\n                <p className=\"ant-upload-text\">点击或拖拽文件上传</p>\n            </Upload.Dragger>\n        </>\n    )\n}\n","import { CloseOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport Upload, { RcFile, UploadChangeParam } from 'antd/lib/upload';\nimport React, { useState } from 'react'\nimport './ImageUploadPlus.less';\n\ninterface Iprops {\n    maxCount?: number\n    value?: string[]\n    onChange?: (value: string[]) => void\n}\n\nexport default function ImageUploadPlus(props: Iprops) {\n    const [visableChangePhone, setVisableChangePhone] = useState(false);\n    const [fileLoading, setFileLoading] = useState(false);\n    const [imgUrl, setImgUrl] = useState('');\n    const [imageList, setImageList] = useState<string[]>([])\n    const [loading, setLoading] = useState(true);\n\n    function getBase64(img: any, callback: any) {\n        const reader = new FileReader();\n        reader.addEventListener('load', () => callback(reader.result));\n        reader.readAsDataURL(img);\n    }\n\n    function beforeUpload(file: RcFile) {\n        const maxCount = props.maxCount || 1\n        if (imageList.length >= maxCount) {\n            message.error('超出文件数量限制');\n            return false\n        }\n        const isFormatOk = file.type === 'image/jpeg' || file.type === 'image/png' || file.type === 'image/gif' || file.type === 'image/jpg';\n        if (!isFormatOk) {\n            message.error('仅支持 JPG/PNG 格式图片');\n        }\n        const isLt10M = file.size / 1024 / 1024 < 10;\n        if (!isLt10M) {\n            message.error('图片大小应小于 10MB');\n        }\n        return isFormatOk && isLt10M;\n    }\n\n    const handleChange = (info: UploadChangeParam) => {\n        console.log(info);\n        if (info.file.status === 'uploading') {\n            setFileLoading(true);\n            return;\n        }\n        if (info.file.status === 'done') {\n            setFileLoading(false);\n        }\n    };\n\n    return (\n        <div className=\"d-f fw\">\n            {\n                imageList.map((imageUrl, imageIndex) => {\n                    const key = Math.random().toString(36).substring(2);\n                    return <div className=\"image-card s0 mr16 mb16 ov-h\" key={key}>\n                        <div className=\"image-close\" onClick={() => {\n                            const orginList = [...imageList]\n                            orginList.splice(imageIndex, 1)\n                            setImageList(orginList)\n                            props.onChange && props.onChange(orginList)\n                        }}>\n                            <CloseOutlined style={{ color: '#fff' }} />\n                        </div>\n                        <img\n                            src={imageUrl}\n                            alt=\"file\"\n                            style={{ width: '100%' }}\n                        />\n                    </div>\n                })\n            }\n            {\n                imageList.length < (props.maxCount || 1) ? <Upload\n                    name=\"file\"\n                    listType=\"picture-card\"\n                    className=\"file-uploader\"\n                    showUploadList={false}\n                    // action={ }\n                    method=\"POST\"\n                    customRequest={(options) => {\n                        console.log(options.file);\n                        getBase64(options.file, (imageUrl: string) => {\n                            // setImgUrl(imageUrl);\n                            const tarList = [...imageList, imageUrl]\n                            setImageList(tarList)\n                            setFileLoading(false);\n                            props.onChange && props.onChange(tarList)\n                        });\n                    }}\n                    beforeUpload={beforeUpload}\n                    onChange={handleChange}\n                >\n                    <div>\n                        {fileLoading ? (\n                            <LoadingOutlined />\n                        ) : (\n                                <PlusOutlined />\n                            )}\n                        <div style={{ marginTop: 8 }}>上传图片</div>\n                    </div>\n                </Upload> : null\n            }\n        </div>\n    )\n}\n","import { LabeledValue } from 'antd/lib/select';\nimport React, { ChangeEvent, ReactNode } from 'react';\nimport './CheckoutGroupPlus.less'\n\ndeclare module 'react' {\n    interface HTMLAttributes<T> extends AriaAttributes, DOMAttributes<T> {\n        // extends React's HTMLAttributes\n        trigger?: string;\n    }\n}\n\ninterface CheckboxProps {\n    name?: string,\n    label?: string,\n    className?: string,\n    checked?: boolean | undefined,\n    defaultChecked?: boolean,\n    disabled?: boolean,\n    value?: number | string,\n    onChange?: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\ninterface CheckboxGroupProps {\n    values?: string[],\n    defaultValue?: string[],\n    disabled?: boolean,\n    // option: LabeledValue[],\n    option: ICheckboxOptions[],\n    className?: string,\n    children?: JSX.Element,\n    onChange?: (values: Array<string | number>) => void\n}\n\nexport interface ICheckboxOptions {\n    label: ReactNode,\n    value: string | number,\n    display?: boolean,\n    disabled?: boolean,\n}\n\nexport default function Checkbox(props: CheckboxProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        props.onChange && props.onChange(e);\n    };\n\n    return (\n        <div className={['checkbox-box-normalize mr16 d-il', props.className].join(' ')}>\n            {\n                props.checked === undefined ? <input\n                    id={id}\n                    trigger='core'\n                    type=\"checkbox\"\n                    disabled={props.disabled}\n                    name={props.name || ''}\n                    value={props.value}\n                    defaultChecked={props.defaultChecked || false}\n                    onChange={handleChange}\n                /> : <input\n                        id={id}\n                        trigger='core'\n                        type=\"checkbox\"\n                        disabled={props.disabled}\n                        name={props.name || ''}\n                        value={props.value}\n                        checked={props.checked}\n                        onChange={handleChange}\n                    />\n            }\n            <span className=\"checkbox-hook ta-c\">\n                <span className=\"checkbox-hook-in fs12 op0\">✓</span>\n            </span>\n            <label htmlFor={id} className=\"p-r z10 pl8\">{props.label || ''}</label>\n        </div>\n    );\n}\n\nexport function CheckboxFontIn(props: CheckboxProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        props.onChange && props.onChange(e);\n        console.log(e);\n    };\n\n    return (\n        <div className={['checkbox-box-fontstyle d-il mr16 mb8', props.className].join(' ')}>\n            {\n                props.checked === undefined ? <input\n                    id={id}\n                    trigger='core'\n                    type=\"checkbox\"\n                    disabled={props.disabled}\n                    className=\"d-n\"\n                    name={props.name}\n                    value={props.value}\n                    defaultChecked={props.defaultChecked || false}\n                    onChange={handleChange}\n                /> : <input\n                        id={id}\n                        trigger='core'\n                        type=\"checkbox\"\n                        disabled={props.disabled}\n                        className=\"d-n\"\n                        name={props.name}\n                        value={props.value}\n                        checked={props.checked}\n                        onChange={handleChange}\n                    />\n            }\n            <label\n                htmlFor={id}\n                className=\"checkbox-fontstyle mb0\">\n                <span className=\"m0\">{props.label || ''}</span>\n            </label>\n        </div>\n    );\n}\n\nexport function CheckboxImageIn(props: CheckboxProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        props.onChange && props.onChange(e);\n    };\n\n    return (\n        <div className={['checkbox-box-imgstyle d-il mr16 mb8', props.className].join(' ')}>\n            {\n                props.checked === undefined ? <input\n                    id={id}\n                    trigger='core'\n                    type=\"checkbox\"\n                    disabled={props.disabled}\n                    className=\"d-n\"\n                    name={props.name}\n                    value={props.value}\n                    defaultChecked={props.defaultChecked || false}\n                    onChange={handleChange}\n                /> : <input\n                        id={id}\n                        trigger='core'\n                        type=\"checkbox\"\n                        disabled={props.disabled}\n                        className=\"d-n\"\n                        name={props.name}\n                        value={props.value}\n                        checked={props.checked}\n                        onChange={handleChange}\n                    />\n            }\n            <label\n                htmlFor={id}\n                className=\"checkbox-imgstyle mb0\">\n                <img src={`${props.label}`} alt=\"\" />\n                <p className=\"m0\">{props.value}</p>\n                <div className=\"checkbox-mark\"><span>✓</span></div>\n            </label>\n        </div>\n    );\n}\n\nexport function CheckboxBorder(props: CheckboxProps): JSX.Element {\n    const id = Math.random().toString(36).substring(2);\n\n    const handleChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        props.onChange && props.onChange(e);\n    };\n\n    return (\n        <div className=\"trigger-box-border d-il mr16 mb8\">\n            {\n                props.checked === undefined ? <input\n                    id={id}\n                    trigger='core'\n                    type=\"checkbox\"\n                    disabled={props.disabled}\n                    className=\"d-n\"\n                    name={props.name}\n                    value={props.value}\n                    defaultChecked={props.defaultChecked || false}\n                    onChange={handleChange}\n                /> : <input\n                        id={id}\n                        trigger='core'\n                        type=\"checkbox\"\n                        disabled={props.disabled}\n                        className=\"d-n\"\n                        name={props.name}\n                        value={props.value}\n                        checked={props.checked}\n                        onChange={handleChange}\n                    />\n            }\n            <label\n                htmlFor={id}\n                className=\"trigger-border mb0\"\n            >\n                <span className=\"m0\">{props.label || ''}</span>\n            </label>\n        </div>\n    );\n}\n\nconst GroupContainer = (Component: any) => function Group(props: CheckboxGroupProps): JSX.Element {\n    const name = Math.random().toString(36).substring(2);\n\n    const isInArray = (arr: string[], value: string | number): boolean | undefined => {\n        if (Array.isArray(arr)) {\n            return arr.indexOf(value as string) !== -1;\n        }\n        return undefined;\n    };\n\n    const onChange = (e: ChangeEvent<HTMLInputElement>): void => {\n        const { value, checked } = e.target;\n\n        let values: Array<string | number> = [];\n        let res: Array<string | number> = [];\n\n        // 可控\n        if (props.values) {\n            values = [...props.values];\n        } else {\n            // 非可控\n            values = [...(props?.defaultValue || [])];\n        }\n\n        if (checked) {\n            res = [...values, value];\n        } else {\n            const index = values.indexOf(value);\n            if (index !== -1) {\n                values.splice(index, 1);\n                res = [...values];\n            }\n        }\n        props.onChange && props.onChange(res);\n    };\n\n    return (\n        <div className={props.className || ''}>\n            {\n                props.option.map((item, index) => {\n                    const componentProps = {\n                        defaultChecked: isInArray(props.defaultValue || [], item.value),\n                        checked: isInArray(props.values || [], item.value),\n                        name: name,\n                        label: item.label,\n                        value: item.value,\n                        disabled: item.disabled || props.disabled,\n                        display: item.display,\n                        onChange: onChange\n                    };\n                    return <Component {...componentProps} key={index} />;\n                })\n            }\n        </div>\n    );\n};\n\nCheckbox.Group = GroupContainer(Checkbox);\nCheckbox.GroupFontIn = GroupContainer(CheckboxFontIn);\nCheckbox.GroupBorder = GroupContainer(CheckboxBorder);\nCheckbox.GroupImageIn = GroupContainer(CheckboxImageIn);\n","import { Button, Col, Collapse, DatePicker, Form, FormInstance, Input, message, Radio, Row, Steps, Upload } from 'antd'\nimport { Rule, RuleObject } from 'antd/lib/form'\nimport Select, { LabeledValue } from 'antd/lib/select'\nimport React, { useEffect, useLayoutEffect, useRef, useState } from 'react'\nimport moment from \"moment\";\nimport { InboxOutlined, MinusCircleOutlined, PlusOutlined } from '@ant-design/icons';\nimport InputSearch from '../InputSearch/InputSearch';\nimport FileUploadPlus from '../FileUploadPlus/FileUploadPlus';\nimport ImageUploadPlus from '../ImageUploadPlus/ImageUploadPlus';\nimport Checkbox from '../CheckoutGroupPlus/CheckoutGroupPlus';\n\ninterface IProps {\n    primaryKey?: string\n    form?: FormInstance\n    config?: IDynamicFormConfigItem[]\n    configGroup?: IDynamicFormGroupConfigItem[]\n    formChangeRes?: IFormChangeRes\n    linkageConfig?: ILinkageConfig[]\n    onRetryInfoChange?: (value: string) => void\n}\n\nexport interface ILinkageConfig {\n    dep: string[]\n    effect: string\n    effectOption: Record<string | number, LabeledValue[]>\n}\n\ninterface IFormChangeRes {\n    currentChange: Record<string, any>\n    allValues: Record<string, any>\n}\nexport interface IDynamicFormGroupConfigItem {\n    expanded: boolean\n    group: string\n    config: IDynamicFormConfigItem[]\n}\n\nexport interface IDynamicFormConfigItem {\n    name: string\n    label: string\n    type: TDynamicFormType\n    defaultValue?: number | string\n    required?: boolean\n    placeHolder?: string\n    options?: LabeledValue[]\n    rules?: Rule[]\n    disable?: boolean\n    description?: any\n    multiple?: boolean,\n    list?: IDynamicFormConfigItem[]\n    data: Record<string, any>\n}\n\nexport type TDynamicFormType = 'input' | 'textArea' | 'select' | 'datePicker' | 'rangePicker' | 'radio' | 'checkout' | 'match-input' | 'input-select' | 'fileUpload' | 'imageUpload' | 'audioUpload' | 'videoUpload' | 'imageSelect';\n\nexport function calculateId(strList: string[]): number {\n    const str2Num = (str: string) => {\n        const res = (str || '').split('').reduce((pre, next) => pre + next.charCodeAt(0), 0)\n        return res\n    }\n    const sum = strList.reduce((pre, next) => pre + str2Num(next), 0)\n    return sum\n}\n\nexport default function DynamicForm(props: IProps) {\n\n    const [current, setCurrent] = useState(0);\n    const [currentConfig, _setCurrentConfig] = useState(props.config)\n    const currentConfigRef = useRef(props.config);\n    const setCurrentConfig = (data: IDynamicFormConfigItem[] | undefined): void => {\n        currentConfigRef.current = data;\n        _setCurrentConfig(data);\n    };\n\n    const [currentConfigGroup, _setCurrentConfigGroup] = useState(props.configGroup)\n    const currentConfigGroupRef = useRef(props.configGroup);\n    const setCurrentConfigGroup = (data: IDynamicFormGroupConfigItem[] | undefined): void => {\n        currentConfigGroupRef.current = data;\n        _setCurrentConfigGroup(data);\n    };\n\n    const findOptionInLinkAge = (field: string, config: ILinkageConfig[]): Array<{\n        effect: string\n        option: LabeledValue[]\n    }> => {\n        const res = config.filter(configItem => configItem.dep.includes(field)).map(item => {\n            const values = item.dep.map(item => props.form?.getFieldValue(item)).filter(item => !(item === undefined || item === null))\n            const valueId = calculateId(values)\n            return {\n                effect: item.effect,\n                option: item.effectOption[valueId] || []\n            }\n        })\n        return res\n    }\n\n    const setValueInConfig = (field: string, props: Record<string, any>) => {\n        const tarConfig = currentConfigRef.current ? [...currentConfigRef.current] : []\n        if (tarConfig) {\n            for (let i = 0; i < tarConfig.length; i++) {\n                const item = tarConfig[i];\n                if (item.name === field) {\n                    tarConfig[i] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n        }\n        setCurrentConfig(tarConfig)\n    }\n\n    const setValueInConfigGroup = (field: string, props: Record<string, any>) => {\n        const tarConfigGroup = currentConfigGroupRef.current ? [...currentConfigGroupRef.current] : []\n        for (let i = 0; i < tarConfigGroup.length; i++) {\n            const configList = [...tarConfigGroup[i].config];\n            for (let j = 0; j < configList.length; j++) {\n                const item = configList[j];\n                if (item.name === field) {\n                    configList[j] = {\n                        ...item,\n                        ...props\n                    }\n                }\n            }\n            tarConfigGroup[i] = {\n                ...tarConfigGroup[i],\n                config: configList\n            }\n        }\n        setCurrentConfigGroup(tarConfigGroup)\n    }\n\n    const resetFieldProps = (field: string, linkageConfig: ILinkageConfig[]) => {\n        const optionInlinkAge = findOptionInLinkAge(field, linkageConfig)\n        optionInlinkAge.forEach(item => {\n            props.form?.setFieldsValue({ [item.effect]: undefined })\n            setValueInConfig(item.effect, { options: item.option })\n            setValueInConfigGroup(item.effect, { options: item.option })\n        })\n    }\n\n    useEffect(() => {\n        if (props.formChangeRes && props.linkageConfig) {\n            const { currentChange } = props.formChangeRes\n            resetFieldProps(Object.keys(currentChange)[0], props.linkageConfig)\n        }\n    }, [props.formChangeRes])\n\n    // 表单联动初始化\n    useEffect(() => {\n        setCurrentConfig(props.config)\n        setCurrentConfigGroup(props.configGroup)\n        const formValues = props.form?.getFieldsValue() || {}\n        Object.entries(formValues).forEach(([key, value]) => {\n            if (value !== undefined) {\n                resetFieldProps(key, props.linkageConfig || [])\n            }\n        })\n\n    }, [props.configGroup, props.config])\n\n    const next = () => {\n        setCurrent(current + 1);\n    };\n\n    const prev = () => {\n        setCurrent(current - 1);\n    };\n\n    const renderImageUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <ImageUploadPlus maxCount={config.data.maxCount} />\n        </Form.Item>\n    }\n\n    const renderFileUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <FileUploadPlus />\n        </Form.Item>\n    }\n\n    const renderVideoUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <FileUploadPlus type=\"video\" maxSize={1024 * 1024 * 100} format={['video/mp4', 'video/aiv', 'video/3gp', 'video/3gpp', 'video/mov']} />\n        </Form.Item>\n    }\n\n    const renderAudioUpload = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <FileUploadPlus type=\"audio\" maxSize={1024 * 1024 * 10} format={['audio/mpeg','audio/mp3', 'audio/wav']} />\n        </Form.Item>\n    }\n\n    const renderInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules: Rule[] = [\n        //     { required: config.required, message: `请输入${config.label}` },\n        //     config.rule ? { pattern: new RegExp(`/^${config.rule}$/`), message: '请按正确的规则输入' } : undefined,\n        // ].filter(item => !!item) as Rule[]\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Input disabled={config.disable} placeholder={`请输入${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderMatchInput = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n\n        return <Form.Item key={`dynamicForm_${config.name}_noStyle`} noStyle shouldUpdate={(pre, next) => {\n            // todo:更新有点问题\n            // return pre[config.name] != pre[config.name]\n            return JSON.stringify(pre) != JSON.stringify(next)\n        }}>\n            {\n                ({ getFieldValue, setFieldsValue }) => {\n                    const templateText = `${config.defaultValue}`\n                    const matchList = templateText.match(/\\$\\{\\w*}/gi) || []\n                    let value = templateText\n                    matchList.forEach(item => {\n                        const itemKey = item.replace(/^\\$\\{/, '').replace(/\\}$/, '')\n                        const itemValue = getFieldValue(itemKey)\n                        if (itemValue !== undefined) {\n                            value = value.replace(item, itemValue)\n                        }\n                    })\n\n                    if (getFieldValue(config.name) !== value) {\n                        setFieldsValue({\n                            [config.name]: value\n                        })\n                    }\n\n                    return <Form.Item\n                        key={`dynamicForm_${config.name}`}\n                        label={config.label}\n                        name={config.name}\n                        rules={config.rules}\n                        extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n                        {...itemProps}\n                    >\n                        <Input disabled={true} />\n                    </Form.Item>\n                }\n            }\n        </Form.Item>\n    }\n\n    const renderInputSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: string[] = (config.options || []).map(item => item.label as string)\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <InputSearch isOpenSearchMatch={true} disabled={config.disable} placeholder={`请选择${config.label}`} options={options} />\n        </Form.Item>\n    }\n\n    const renderTextArea = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Input.TextArea autoSize={{ minRows: 4 }} disabled={config.disable} placeholder={`请输入${config.label}`} />\n        </Form.Item>\n    }\n\n    const renderSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Select\n                onClick={() => {\n                    console.log('click', props.form?.getFieldsValue())\n                    // props.form?.setFieldsValue({ app_group: \"g_other_tme_infrastructure_tme_central_kuwo\" })\n                }}\n                style={{ width: '100%' }}\n                mode={config.multiple ? 'multiple' : undefined}\n                onChange={(value) => {\n                    !!config.data.retry_info && props.onRetryInfoChange && props.onRetryInfoChange(value)\n                }}\n                showSearch\n                disabled={config.disable}\n                optionFilterProp=\"label\"\n                placeholder={`请选择${config.label}`}\n                options={options} />\n        </Form.Item>\n    }\n\n    const renderImageSelect = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            // rules={config.rules}\n            initialValue={config.defaultValue}\n            valuePropName=\"values\"\n            extra={config.description ? <span dangerouslySetInnerHTML={{ __html: config.description }}></span> : null}\n            {...itemProps}\n        >\n            <Checkbox.GroupImageIn\n                option={options} />\n        </Form.Item>\n    }\n\n    const renderRadio = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        // const rules = [\n        //     { required: config.required, message: `请选择${config.label}` },\n        // ]\n        const options: LabeledValue[] = config.options || []\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name={config.name}\n            rules={config.rules}\n            initialValue={config.defaultValue}\n            {...itemProps}\n        >\n            <Radio.Group options={options} />\n        </Form.Item>\n    }\n    const renderDatePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name=\"fromDate\"\n            rules={[{ required: true, message: '请选择时间' }]}\n            {...itemProps}\n        >\n            {/* <DatePicker showTime disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} /> */}\n        </Form.Item>\n    }\n    const renderRangePicker = (config: IDynamicFormConfigItem, itemProps: Record<string, any>) => {\n        return <Form.Item\n            key={`dynamicForm_${config.name}`}\n            label={config.label}\n            name=\"fromDate\"\n            rules={[{ required: true, message: '请选择时间' }]}\n            {...itemProps}\n        >\n            {/* <DatePicker showTime disabledDate={(current) => {\n                return current && current > moment().endOf('day');\n            }} /> */}\n        </Form.Item>\n    }\n\n    const dispatchRenderFormItem = (item: IDynamicFormConfigItem, itemProps: Record<string, any> = {}): JSX.Element | null => {\n        switch (item.type) {\n            case 'imageSelect':\n                return renderImageSelect(item, itemProps)\n            case 'imageUpload':\n                return renderImageUpload(item, itemProps)\n            case 'fileUpload':\n                return renderFileUpload(item, itemProps)\n            case 'videoUpload':\n                return renderVideoUpload(item, itemProps)\n            case 'audioUpload':\n                return renderAudioUpload(item, itemProps)\n            case 'input':\n                return renderInput(item, itemProps)\n            case 'match-input':\n                return renderInput(item, itemProps)\n            // return renderMatchInput(item, itemProps)\n            case 'input-select':\n                return renderInputSelect(item, itemProps)\n            case 'textArea':\n                return renderTextArea(item, itemProps)\n            case 'select':\n                return renderSelect(item, itemProps)\n            case 'datePicker':\n                return renderDatePicker(item, itemProps)\n            case 'rangePicker':\n                return renderRangePicker(item, itemProps)\n            case 'radio':\n                return renderRadio(item, itemProps)\n            default:\n                return null\n        }\n    }\n\n    const renderFormItem = (config: IDynamicFormConfigItem[]): Array<any | null> => {\n        return (config || []).map(item => {\n            if (item.list && item.list.length) {\n                const formList = <Form.List key={`dynamicForm_${item.name}`} name={item.name}>\n                    {(fields, { add, remove }) => (\n                        <>\n                            {fields.map(({ key, name, ...restField }) => (\n                                <div key={key} className=\"bor b-side pt32 plr16 mb16\">\n                                    {\n                                        item.list && item.list.map(listItem => {\n                                            return dispatchRenderFormItem(listItem, {\n                                                ...restField,\n                                                name: [name, listItem.name]\n                                            })\n                                        })\n                                    }\n                                    {/* <MinusCircleOutlined onClick={() => remove(name)} /> */}\n                                    <Form.Item wrapperCol={{ offset: 5 }}>\n                                        <Button danger onClick={() => remove(name)} block icon={<MinusCircleOutlined />}>\n                                            删除该项\n                                        </Button>\n                                    </Form.Item>\n                                </div>\n                            ))}\n                            <Form.Item noStyle className=\"w100\">\n                                <Button type=\"dashed\" className=\"w100\" onClick={() => add()} block icon={<PlusOutlined />}>\n                                    增加一项\n                                </Button>\n                            </Form.Item>\n                        </>\n                    )}\n                </Form.List>\n                return formList\n            } else {\n                return dispatchRenderFormItem(item)\n            }\n        })\n    }\n\n    return (\n        <>\n            <Form.Item\n                key={`dynamicForm_id`}\n                name={props.primaryKey || 'id'}\n                noStyle\n                hidden\n            >\n                <Input />\n            </Form.Item>\n            {/* {\n                props.configGroup && props.configGroup.length ?\n                    (props.configGroup || []).map(item => {\n                        return <div className=\"pb16\">\n                            <Row className=\"strong fs16 mb16 bg-module\"><Col ><span className=\"d-il pl4 bor-l b-theme ptb4\">{item.group}</span></Col></Row>\n                            {renderFormItem(item.config)}\n                        </div>\n                    }) : renderFormItem(props.config || [])\n            } */}\n            {\n                currentConfigGroup && currentConfigGroup.length ? <>\n                    <Steps current={current}>\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <Steps.Step key={index} title={item.group} />\n                            })\n                        }\n                    </Steps>\n                    <div className=\"pt32\">\n                        {\n                            (currentConfigGroup || []).map((item, index) => {\n                                return <div key={index} className={[current === index ? 'p-r z9' : 'p-a z-99 v-h l-10000'].join(' ')}>\n                                    {renderFormItem(item.config)}\n                                </div>\n                            })\n                        }\n                    </div>\n                    <div className=\"ta-c pt32\">\n                        {current > 0 && (\n                            <Button onClick={() => prev()}>\n                                上一步\n                            </Button>\n                        )}\n                        {current < (currentConfigGroup || []).length - 1 && (\n                            <Button type=\"primary\" className=\"ml16\" onClick={() => {\n                                if (props.form) {\n                                    const currentConfigGroupNameList = currentConfigGroup[current].config.map(item => item.name)\n                                    props.form.validateFields(currentConfigGroupNameList).then(() => {\n                                        next()\n                                    }).catch(err => {\n                                        console.log(err)\n                                    })\n                                } else {\n                                    next()\n                                }\n                            }}>\n                                下一步\n                            </Button>\n                        )}\n                        <div>\n                            {current === (currentConfigGroup || []).length - 1 && (\n                                <div className=\"pt8 c-hint-b\">点击确定完成提交</div>\n                            )}\n                        </div>\n                    </div>\n                </> : renderFormItem(currentConfig || [])\n            }\n\n            {/* {\n                props.configGroup && props.configGroup.length ?\n                    <Collapse defaultActiveKey={(props.configGroup || []).map((item, idx) => idx)} ghost expandIconPosition='right'>\n                        {\n                            (props.configGroup || []).map((item, index) => {\n                                return <Collapse.Panel key={index} header={<span className=\"strong fs16 pl8 bor-l b-theme\">{item.group}</span>}>\n                                    <div className=\"pb16\">\n                                        {renderFormItem(item.config)}\n                                    </div>\n                                </Collapse.Panel>\n                            })\n                        }\n                    </Collapse> : renderFormItem(props.config || [])\n            } */}\n\n        </>\n    )\n}\n","import React, { ReactNode } from 'react'\nimport './Loading.less';\n\ninterface IProps {\n    value: number\n    content?: ReactNode\n}\n\nexport default function Loading(props: IProps) {\n    return (\n        <div className=\"loading-container\">\n            <div className=\"g-container\">\n                <div className=\"g-number\">{props.value}%</div>\n                <div className=\"g-contrast\">\n                    <div className=\"g-circle\"></div>\n                    <ul className=\"g-bubbles\">\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                        <li></li>\n                    </ul>\n                </div>\n                {\n                    props.content\n                }\n            </div>\n        </div>\n    )\n}\n","import axios from '../api/index'\nconst wx = require('weixin-js-sdk')\n\n// TODO \nconst wxSignUrl = '/wechat/jsapi';\n// const wxSignUrl = '/wechat/jsapi';\n\nexport interface ShareContext {\n  title?: string\n  link?: string\n  desc?: string\n  imgUrl?: string\n}\n\nconst isInWeixin = function (): boolean {\n  var ua = navigator.userAgent.toLowerCase()\n  var isWeixin = ua.indexOf('micromessenger') != -1\n  if (!isWeixin) {\n    // document.head.innerHTML = '<title>抱歉，出错了</title><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1, user-scalable=0\"><link rel=\"stylesheet\" type=\"text/css\" href=\"https://res.wx.qq.com/open/libs/weui/0.4.1/weui.css\">';\n    // document.body.innerHTML = '<div class=\"weui_msg\"><div class=\"weui_icon_area\"><i class=\"weui_icon_info weui_icon_msg\"></i></div><div class=\"weui_text_area\"><h4 class=\"weui_msg_title\">请在微信客户端打开链接</h4></div></div>';\n    return false\n  }\n  return true\n}\n\nconst weixin = function (): Promise<any> {\n  return new Promise((resolve, reject) => {\n    let url = window.location.href\n    // alert(wxSignUrl)\n    axios.get(wxSignUrl, {\n      params: {\n        url: url\n      }\n    }).then((ress: any) => {\n      let res = ress.data\n      // alert(JSON.stringify(res.data))\n      if (res.code == 0) {\n        wx.config({\n          debug: false,\n          appId: res.data.appId,\n          timestamp: res.data.timestamp,\n          nonceStr: res.data.nonceStr,\n          signature: res.data.signature,\n          jsApiList: [\n            'showOptionMenu',\n            \"hideMenuItems\",\n            \"showMenuItems\",\n            'onMenuShareTimeline',\n            'onMenuShareAppMessage',\n            'updateAppMessageShareData', // 自定义“分享给朋友”及“分享到QQ”按钮的分享内容\n            'updateTimelineShareData', // 自定义“分享到朋友圈”及“分享到QQ空间”按钮的分享内容（1.4.0）\n          ]\n        })\n        wx.ready((res: any) => {\n          // alert('wxsdk准备初始化')\n          // @ts-ignore\n          resolve(wx, res)\n        })\n        wx.error((err: any) => {\n          // alert('wxsdk准备初始化失败');\n          // @ts-ignore\n          reject(wx, err)\n        })\n      }\n    })\n  })\n}\n\n// 微信分享\nconst share = function (share: ShareContext): void {\n  weixin().then((wx) => {\n    // alert(JSON.stringify(wx))\n    console.log(wx)\n    wx.ready(() => {\n      // alert('wxsdk初始化完成')\n      setTimeout(() => {\n        wx.updateAppMessageShareData({\n          title: share.title,\n          link: share.link,\n          desc: share.desc,\n          imgUrl: share.imgUrl || 'https://cdn.lifeat.cn/webappGroup/usedcar-shareIcon.png',\n          type: 'link',\n          success: function () {\n            // alert('分享成功')\n          },\n          cancel: function () {\n            alert('分享设置失败')\n          }\n        })\n\n        wx.updateTimelineShareData({\n          title: share.title,\n          link: share.link,\n          desc: share.desc,\n          imgUrl: share.imgUrl || 'https://cdn.lifeat.cn/webappGroup/usedcar-shareIcon.png',\n          type: 'link',\n          success: function () {\n            // alert('分享成功')\n          },\n          cancel: function () {\n            alert('分享设置失败1')\n          }\n        })\n      }, 500)\n    })\n  })\n}\n\nexport {\n  isInWeixin,\n  weixin,\n  share\n}\n","import { GithubOutlined } from '@ant-design/icons'\nimport { Button, Form, message, Result, Spin, Tag } from 'antd'\nimport React, { useEffect, useState, useRef } from 'react'\nimport { IAppInfo, IResultItem } from '../../api/interface/stateInterface'\nimport { getAppInfo, submitData } from '../../api/mobiApi'\nimport ReactMarkdown from 'react-markdown'\nimport AwesomeSlider from 'react-awesome-slider';\n// @ts-ignore\nimport withAutoplay from 'react-awesome-slider/dist/autoplay';\nimport 'react-awesome-slider/dist/styles.css';\nimport DynamicForm, { IDynamicFormConfigItem } from '../../components/DynamicForm/DynamicForm'\nimport Checkbox from '../../components/CheckoutGroupPlus/CheckoutGroupPlus'\nimport { useLocation } from 'react-router-dom'\nimport Loading from '../../components/Loading/Loading'\nimport { isInWeixin, share } from '../../utils/weixin'\n\nconst AutoplaySlider = withAutoplay(AwesomeSlider);\n\n// import './Index.less';\n\nexport default function Index() {\n    const [pageInfo, setPageInfo] = useState<IAppInfo>()\n    const [dynamicFormConfig, setDynamicFormConfig] = useState<IDynamicFormConfigItem[]>([])\n    const [reslutList, setReslutList] = useState<IResultItem[]>([])\n    const [selected, setSelected] = useState<any[]>([])\n    const [loading, setLoading] = useState(false)\n    const [form] = Form.useForm();\n    const location = useLocation()\n\n    const [activeKey, _setActiveKey] = useState<number>(0);\n    const activeKeyRef = useRef(activeKey);\n    const setActiveKey = (data: number): void => {\n        activeKeyRef.current = data;\n        _setActiveKey(data);\n    };\n\n    useEffect(() => {\n        const timerTagRecord = setInterval(() => {\n            if (activeKeyRef.current < 99) {\n                setActiveKey(activeKeyRef.current + 1);\n            }\n        }, 1000);\n        return () => {\n            clearInterval(timerTagRecord);\n        };\n    }, []);\n\n    useEffect(() => {\n        getAppInfo(location.pathname).then(res => {\n            const data = res.data\n            const tarConfig = createDyFormConfig(data.inference_inputs, {}, {})\n            setPageInfo(data)\n            setDynamicFormConfig(tarConfig)\n\n            if (isInWeixin()) {\n                share({\n                    title: data?.describe,\n                    link: window.location.href,\n                    desc: 'cube-studio 开源社区',\n                    imgUrl: `https://cube-studio-1252405198.cos.ap-nanjing.myqcloud.com/example/${data.name}/example.jpg`\n                })\n            }\n        }).catch(err => { }).finally(() => {\n            // setLoading(false)\n        })\n    }, [])\n\n    // 表单字段处理\n    const createDyFormConfig = (data: Record<string, any>[], label_columns: Record<string, any>, description_columns: Record<string, any>): IDynamicFormConfigItem[] => {\n        const typeMap: any = {\n            text: 'input',\n            text_select: 'select',\n            text_select_multi: 'select',\n            image: 'imageUpload',\n            video: 'videoUpload',\n            audio: 'audioUpload',\n            file: 'fileUpload',\n            image_multi: 'imageUpload',\n            video_multi: 'videoUpload',\n            image_select: 'imageSelect',\n            image_select_multi: 'imageSelect',\n\n        }\n\n        return data.map((item, index) => {\n            let type = typeMap[item.type]\n            const label = item.label || label_columns[item.name]\n\n            // 校验规则\n            const rules = (item.validators || []).map((item: any) => {\n                if (type === 'select') {\n                    return item.type === 'DataRequired' ? { required: true, message: `请选择${label}` } : undefined\n                }\n\n                switch (item.type) {\n                    case 'DataRequired':\n                        return { required: true, message: `请输入${label}` }\n                    case 'Regexp':\n                        return { pattern: new RegExp(`${item.regex}`), message: `请按正确的规则输入` }\n                    case 'Length':\n                        return { min: item.min || 0, max: item.max, message: `请输入正确的长度` }\n                    default:\n                        return undefined\n                }\n            }).filter((item: any) => !!item)\n\n            const list = createDyFormConfig((item.info || []), label_columns, description_columns)\n\n            const res: IDynamicFormConfigItem = {\n                label,\n                type,\n                // rules,\n                list,\n                name: item.name,\n                disable: item.disable,\n                description: item.describe || undefined,\n                required: item.required,\n                defaultValue: item.default === '' ? undefined : item.default,\n                multiple: item['ui-type'] && item['ui-type'] === 'select2',\n                options: (item.values || []).map((item: any) => ({ label: item.value, value: item.id })),\n                data: { ...item }\n            }\n            return res\n        })\n    }\n\n    return (\n        <div>\n            {/* {\n                loading ? <Spin spinning={loading} style={{ position: 'absolute', top: 0, left: 0, width: '100%', height: '100vh' }}></Spin> : null\n            } */}\n            {\n                loading ? <Loading value={activeKey} content={\n                    <div className=\"ta-c\">\n                        <div className=\"c-text-w fs18 pb8\">结果生成中，稍等片刻</div>\n                        <Button onClick={() => {\n                            setLoading(false)\n                        }}>退出等待</Button>\n                    </div>\n                } /> : null\n            }\n\n            <div style={{ display: 'none' }}>\n                <img style={{ width: 300, height: 300 }} src={pageInfo?.pic} alt=\"\" />\n            </div>\n\n            <div className=\"p16 bg-w\">\n                <div>\n                    <img className=\"w100 pb8\" style={{ maxHeight: 600 }} src={pageInfo?.pic || ''} alt=\"\" />\n                </div>\n                <div className=\"fs20 pb4\" onClick={() => {\n                    window.open(pageInfo?.doc, 'blank')\n                }}><strong>{pageInfo?.name} [{pageInfo?.label}]</strong> <span><GithubOutlined /></span></div>\n                <div className=\"pb4\">{pageInfo?.describe}</div>\n                <div>\n                    <Tag color=\"volcano\">{pageInfo?.scenes}</Tag>\n                    <Tag color=\"green\">{pageInfo?.status}</Tag>\n                </div>\n            </div>\n            <div className=\"ta-r pr16 c-hint-b\">\n                {pageInfo?.version}\n            </div>\n\n            <div className=\"ta-c pb8\">\n                <div className=\"title-mobi\">\n                    应用演示\n                </div>\n            </div>\n\n            <div className=\"p16 mb16\">\n                {/* <Checkbox.GroupImageIn\n                    values={selected}\n                    onChange={(selected: any) => {\n                        setSelected(selected)\n                    }}\n                    option={[{ label: 'http://localhost:8080/app1/static/example/风格1.jpg', value: '风格1' }, { label: 'http://localhost:8080/app1/static/example/风格1.jpg', value: '风格2' }]} /> */}\n                <Form layout=\"horizontal\" form={form} >\n                    <DynamicForm form={form} primaryKey={'target'} config={dynamicFormConfig} />\n                </Form>\n                <div className=\"ta-c\">\n                    <Button type=\"primary\" block onClick={() => {\n                        form.validateFields().then(values => {\n                            console.log(values)\n                            setLoading(true)\n                            setActiveKey(0)\n\n                            submitData(pageInfo?.inference_url || '', values).then(res => {\n                                setReslutList(res.data.result)\n                            }).catch(err => {\n                                message.error('应用运行出问题了')\n                            }).finally(() => {\n                                setLoading(false)\n                            })\n                        }).catch(err => {\n                            message.warn('请填写完整参数')\n                        })\n                    }}>运行应用</Button>\n                </div>\n            </div>\n\n            <div className=\"mb16\">\n                <div className=\"ta-c pb8\">\n                    <div className=\"title-mobi\">\n                        输出\n                    </div>\n                </div>\n\n                {\n                    reslutList.length ? <div className=\"p16\">\n                        {\n                            reslutList.map((result, resultIndex) => {\n                                return <div key={resultIndex} className=\"mb32\">\n                                    <div className=\"ta-c fs20 pb8\">结果{resultIndex + 1}</div>\n                                    {\n                                        result.text ? <div className=\"paper p16\"><span>文本结果：</span>{result.text}</div> : null\n                                    }\n                                    {\n                                        result.markdown ? <div className=\"paper p16 mt16\"><ReactMarkdown>{result.markdown}</ReactMarkdown></div> : null\n                                    }\n                                    {\n                                        result.image ? <div className=\"paper p16 mt16\"><div className=\"pb8\">图片结果：</div><img className=\"w100\" src={result.image} alt=\"\" /></div> : null\n                                    }\n                                    {\n                                        result.video ? <div className=\"paper p16 mt16\"><div className=\"pb8\">视频结果：</div><video className=\"w100\" src={result.video} controls></video></div> : null\n                                    }\n                                    {\n                                        result.audio ? <div className=\"paper p16 mt16\"><div className=\"pb8\">音频结果：</div><audio className=\"w100\" src={result.audio} controls></audio></div> : null\n                                    }\n                                    {\n                                        result.html ? <div className=\"paper p16 mt16\"><div className=\"pb8\">输出结果：</div><div dangerouslySetInnerHTML={{ __html: result.html }}></div></div> : null\n                                    }\n                                </div>\n                            })\n                        }\n                    </div> : <Result\n                            // icon={<SmileOutlined />}\n                            title=\"暂无数据\"\n                        />\n                }\n            </div>\n\n            <div className=\"ta-c pb8\">\n                <div className=\"title-mobi\">\n                    应用推荐\n                </div>\n            </div>\n\n            <div className=\"p16 mb64\">\n                <AutoplaySlider\n                    play={true}\n                    cancelOnInteraction={false} // should stop playing on user interaction\n                    interval={5000}\n                >\n                    {\n                        (pageInfo?.rec_apps || []).map((item, recIndex) => {\n                            return <div style={{ height: '100%' }} key={`rec${recIndex}`}>\n                                <img className=\"w100\" style={{ height: '100%' }} src={item.pic} alt=\"\" />\n                            </div>\n                        })\n                    }\n                </AutoplaySlider>\n            </div>\n        </div>\n    )\n}\n","import { AxiosResponse } from 'axios'\nimport axios, { AxiosResFormat } from '.'\nimport { IAppInfo, IResultItem } from './interface/stateInterface'\n\nexport const getAppInfo = (url: string): Promise<AxiosResponse<IAppInfo>> => {\n    return axios.get(`${url}/info`)\n}\n\nexport const submitData = (url: string, data: Record<any, any>): Promise<AxiosResponse<{\n    result: IResultItem[]\n}>> => {\n    return axios.post(url, data)\n}\n\n"],"names":["InputSearch","props","inputRef","id","Math","random","toString","substring","useState","options","dataCache","setDataCache","value","setValue","useEffect","dataFilter","isOpenSearchMatch","filter","item","indexOf","handleChange","onChange","highlightKeyWord","keyWord","index","preStr","nextStr","length","className","debounceScroll","fun","timer","time","args","clearTimeout","setTimeout","apply","debounce","onScrollButtom","labelName","htmlFor","style","width","disabled","placeholder","maxLength","e","target","onKeyPress","nativeEvent","keyCode","blur","onSearch","currentTarget","ref","element","SearchOutlined","onScroll","stopPropagation","scrollTop","clientHeight","scrollHeight","maxHeight","loading","right","top","map","onMouseDown","onClick","handleClick","FileUploadPlus","setFileLoading","fileList","setFileList","createMediaPreview","file","fileIndex","type","url","undefined","window","createObjectURL","URL","webkitURL","getObjectURL","key","currentFileList","splice","borderBottomLeftRadius","zIndex","DeleteOutlined","color","src","controls","borderRadius","showUploadList","customRequest","console","log","tarList","Promise","all","resolve","reject","name","replace","reader","FileReader","readAsDataURL","onload","result","then","res","beforeUpload","maxCount","message","isFormatOk","format","includes","isLt2M","size","maxSize","info","status","InboxOutlined","VideoCameraAddOutlined","AudioOutlined","ImageUploadPlus","fileLoading","imageList","setImageList","imageUrl","imageIndex","orginList","CloseOutlined","alt","listType","method","img","callback","addEventListener","getBase64","isLt10M","LoadingOutlined","PlusOutlined","marginTop","Checkbox","join","checked","trigger","defaultChecked","label","GroupContainer","Component","isInArray","arr","Array","isArray","values","defaultValue","option","componentProps","display","Group","GroupFontIn","GroupBorder","GroupImageIn","DynamicForm","current","setCurrent","config","currentConfig","_setCurrentConfig","currentConfigRef","useRef","setCurrentConfig","data","configGroup","currentConfigGroup","_setCurrentConfigGroup","currentConfigGroupRef","setCurrentConfigGroup","resetFieldProps","field","linkageConfig","optionInlinkAge","configItem","dep","valueId","form","getFieldValue","reduce","pre","next","split","charCodeAt","effect","effectOption","findOptionInLinkAge","forEach","setFieldsValue","tarConfig","i","setValueInConfig","tarConfigGroup","configList","j","setValueInConfigGroup","formChangeRes","currentChange","Object","keys","formValues","getFieldsValue","entries","renderImageUpload","itemProps","rules","initialValue","extra","description","dangerouslySetInnerHTML","__html","renderFileUpload","renderVideoUpload","renderAudioUpload","renderInput","disable","renderInputSelect","renderTextArea","autoSize","minRows","renderSelect","mode","multiple","retry_info","onRetryInfoChange","showSearch","optionFilterProp","renderImageSelect","valuePropName","renderRadio","renderDatePicker","required","renderRangePicker","dispatchRenderFormItem","renderFormItem","list","fields","add","remove","restField","listItem","wrapperCol","offset","danger","block","icon","MinusCircleOutlined","noStyle","primaryKey","hidden","Step","title","group","currentConfigGroupNameList","validateFields","catch","err","Loading","content","wx","require","share","location","href","axios","params","ress","code","debug","appId","timestamp","nonceStr","signature","jsApiList","ready","error","updateAppMessageShareData","link","desc","imgUrl","success","cancel","alert","updateTimelineShareData","AutoplaySlider","withAutoplay","AwesomeSlider","Index","pageInfo","setPageInfo","dynamicFormConfig","setDynamicFormConfig","reslutList","setReslutList","setLoading","Form","useLocation","activeKey","_setActiveKey","activeKeyRef","setActiveKey","timerTagRecord","setInterval","clearInterval","pathname","createDyFormConfig","inference_inputs","navigator","userAgent","toLowerCase","describe","finally","label_columns","description_columns","typeMap","text","text_select","text_select_multi","image","video","audio","image_multi","video_multi","image_select","image_select_multi","validators","pattern","RegExp","regex","min","max","default","height","pic","open","doc","GithubOutlined","scenes","version","layout","inference_url","resultIndex","markdown","html","play","cancelOnInteraction","interval","rec_apps","recIndex"],"sourceRoot":""}